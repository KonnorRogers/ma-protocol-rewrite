// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders without error 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  margin-top: 2rem;
}

.emotion-3 * {
  width: 50%;
  padding: 0.25rem;
  margin: auto;
}

.emotion-3 .prev-text,
.emotion-3 .next-text {
  display: none;
}

@media only screen and (min-width:640px) {
  .emotion-3 .next-word,
  .emotion-3 .prev-word {
    display: none;
  }

  .emotion-3 .prev-text,
  .emotion-3 .next-text {
    display: inline;
  }
}

.emotion-2 {
  text-align: left;
  padding: 0;
  margin: 0;
}

.emotion-1 {
  color: var(--link-blue);
  padding: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  display: inline-block;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 {
  font-size: 2.2rem;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  margin-top: 2rem;
}

.emotion-3 * {
  width: 50%;
  padding: 0.25rem;
  margin: auto;
}

.emotion-3 .prev-text,
.emotion-3 .next-text {
  display: none;
}

@media only screen and (min-width:640px) {
  .emotion-3 .next-word,
  .emotion-3 .prev-word {
    display: none;
  }

  .emotion-3 .prev-text,
  .emotion-3 .next-text {
    display: inline;
  }
}

.emotion-2 {
  text-align: left;
  padding: 0;
  margin: 0;
}

.emotion-1 {
  color: var(--link-blue);
  padding: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  display: inline-block;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 {
  font-size: 2.2rem;
}

<body>
    <div>
      <div
        class="emotion-3"
      >
        <div
          class="emotion-2"
        >
          <a
            class="emotion-1"
            href="/"
          >
            <span
              class="prev-text"
            >
              <span
                class="emotion-0"
              >
                ←
              </span>
              firstDoc
            </span>
            <span
              class="prev-word"
            >
              Prev
            </span>
          </a>
        </div>
        <div />
      </div>
    </div>
  </body>,
  "container": .emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  margin-top: 2rem;
}

.emotion-3 * {
  width: 50%;
  padding: 0.25rem;
  margin: auto;
}

.emotion-3 .prev-text,
.emotion-3 .next-text {
  display: none;
}

@media only screen and (min-width:640px) {
  .emotion-3 .next-word,
  .emotion-3 .prev-word {
    display: none;
  }

  .emotion-3 .prev-text,
  .emotion-3 .next-text {
    display: inline;
  }
}

.emotion-2 {
  text-align: left;
  padding: 0;
  margin: 0;
}

.emotion-1 {
  color: var(--link-blue);
  padding: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  display: inline-block;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 {
  font-size: 2.2rem;
}

.emotion-3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  margin-top: 2rem;
}

.emotion-3 * {
  width: 50%;
  padding: 0.25rem;
  margin: auto;
}

.emotion-3 .prev-text,
.emotion-3 .next-text {
  display: none;
}

@media only screen and (min-width:640px) {
  .emotion-3 .next-word,
  .emotion-3 .prev-word {
    display: none;
  }

  .emotion-3 .prev-text,
  .emotion-3 .next-text {
    display: inline;
  }
}

.emotion-2 {
  text-align: left;
  padding: 0;
  margin: 0;
}

.emotion-1 {
  color: var(--link-blue);
  padding: 0.25rem;
  -webkit-text-decoration: none;
  text-decoration: none;
  display: inline-block;
}

.emotion-1:hover {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.emotion-0 {
  font-size: 2.2rem;
}

<div>
    <div
      class="emotion-3"
    >
      <div
        class="emotion-2"
      >
        <a
          class="emotion-1"
          href="/"
        >
          <span
            class="prev-text"
          >
            <span
              class="emotion-0"
            >
              ←
            </span>
            firstDoc
          </span>
          <span
            class="prev-word"
          >
            Prev
          </span>
        </a>
      </div>
      <div />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
